## 将等级为INFO的日志信息输出到localLogger和Day,Error这三个目的地，localLogger和Day,Error的定义在下面的代码，
#log4j.rootLogger = DEBUG,localLogger,Day,Error
#
## 等级可分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL
#
## 如果配置OFF则不打出任何信息，如果配置为INFO这样只显示INFO, WARN, ERROR的log信息，
## 而DEBUG信息不会被显示。
## stdout和D,E定义的输出日志级别如log4j.appender.D.Threshold的值必须比log4j.rootLogger定义的级别高才生效。
#
## 日志输出端类型:
## org.apache.log4j.ConsoleAppender（控制台）
## org.apache.log4j.FileAppender（文件）
## org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
## org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
## org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#log4j.appender.localLogger = org.apache.log4j.ConsoleAppender
#
#log4j.appender.localLogger.Target = System.out
#
#log4j.appender.localLogger.Threshold = INFO
#
## 输出端的layout是哪种类型:
## org.apache.log4j.HTMLLayout（以HTML表格形式布局）
## org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
## org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
## org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#log4j.appender.localLogger.layout = org.apache.log4j.PatternLayout
#log4j.appender.localLogger.Append = true
## 使用pattern布局就要指定的打印信息的具体格式ConversionPattern
#log4j.appender.localLogger.layer.ConversionPattern = [%-5p] %d{yyyy-MM-dd hh:mm:ss} %l%m%n
#
#
#
## Day
## org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件)
#log4j.appender.Day = org.apache.log4j.DailyRollingFileAppender
##log4j.appender.Day.OutPutFile = I://Logger//SpringAction/logger.logger
#log4j.appender.Day.Append = true
#log4j.appender.Day.Threshold = DEBUG
#log4j.appender.Day.layout = org.apache.log4j.PatternLayout
#log4j.appender.Day.layout.ConversionPattern = %-d{yyyy-MM-dd hh:mm:ss}  [%t:%r] - [%p]   %m%n
#
#
## Error
#log4j.appender.Error = org.apache.log4j.DailyRollingFileAppender
##log4j.appender.Error.OutPutFile = I://Logger//SpringAction/error.logger
#log4j.appender.Error.Append = true
#log4j.appender.Error.Threshold = ERROR
#log4j.appender.Error.layout = org.apache.log4j.PatternLayout
#log4j.appender.Error.layout.ConversionPattern = %-d{yyyy-MM-dd hh:mm:ss}  [%t:%r] - [%p]   %m%n
#
#
#
#
#
#
#
